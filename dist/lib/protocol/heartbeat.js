/*! 
 safelink - v0.10.3 - 2014-05-09
(C) 2014 Joel Grenon. Distributed under the Apache Version 2.0, January 2004. See attached license
*/var Q=require("q"),redis=require("redis"),_=require("lodash"),moment=require("moment");module.exports=function(a){var b=this;this.log.debug(a,"Handling heartbeat");var c=Q.defer();return Q.nextTick(_.bind(function(){this.db.hset(a.id,"lastHeartbeatTs",moment().utc().unix()),this.db.hget(a.id,"status",function(d,e){d?c.reject(d):(b.log.trace(arguments,"Agent  %s state",a.id),"CONNECTED"!==e?(b.log.info("Agent %s has been detected has connected",a.id),b.db.hset(a.id,"status","CONNECTED"),b.emit("agent-connected",{id:a.id,ts:moment().utc().unix(),agent:a,meta:a.meta})):(b.log.debug("Agent %s was already connected.",a.id),b.db.hget(a.id,"heartbeat-interval",function(c,d){b.log.trace("Detected heartbeat interval: %s",d),b.hasWatchDog(a.id)||(b.ensureWatchDog({id:a.id,interval:d||30}),b.executeOnAgent(a.id,"configure",{restart:!0}))})),a.payload&&(b.log.debug("A payload was supplied by agent %s, asking for help from our host",a.id),b.emit("heartbeat-payload",a,a.payload)),c.resolve())})},this)),c.promise};